package ch.plannr.controller
{
	import ch.plannr.event.CustomEvent;
	import ch.plannr.event.Events;
	import ch.plannr.model.User;
	import ch.plannr.service.HttpServiceFactory;
	
	import flash.events.IEventDispatcher;
	import flash.net.URLRequest;
	
	import mx.controls.Alert;
	import mx.rpc.events.ResultEvent;
	import mx.rpc.http.HTTPService;
	
	import org.swizframework.utils.services.ServiceHelper;

	public class UserController
	{
		
		[Dispatcher]
		public var dispatcher:IEventDispatcher;
		
		[Inject]
		public var serviceHelper : ServiceHelper;
		
		[Inject]
		public var httpServiceFactory:HttpServiceFactory;
		
		[Bindable]
		[Inject(source="context.currentUser", twoWay="true")]
		public var currentUser : User;
		
		
		
		[Mediate( event="Events.REGISTRATION_ATTEMPT", properties="user" )]
		public function registerUser( user : User ) : void
		{
			serviceHelper.executeServiceCall( httpServiceFactory.getService("/webservices/register","POST").send(user.toXml()), handleRegistrationResult );
		}

		private function handleRegistrationResult( event : ResultEvent ) : void
		{
			var xml:XML = new XML(event.result);
			dispatcher.dispatchEvent(new CustomEvent((xml.@success=='true')?Events.REGISTRATION_SUCCESS:Events.REGISTRATION_FAILURE));
		}
		
	}
}