///////////////////////////////////////////////////////////////////////////////
// Licensed Materials - Property of IBM
// 5724-Y31,5724-Z78
// Â© Copyright IBM Corporation 2007, 2010. All Rights Reserved.
//
// Note to U.S. Government Users Restricted Rights:
// Use, duplication or disclosure restricted by GSA ADP Schedule
// Contract with IBM Corp.
///////////////////////////////////////////////////////////////////////////////

package 
{
  import flash.display.DisplayObjectContainer;
  import com.ibm.ilog.elixir.timeline.components.TimelineDataGroup;
  import com.ibm.ilog.elixir.timeline.components.supportClasses.TimelineBandBase;
  
  import mx.formatters.Formatter;
  
  import spark.components.supportClasses.TextBase;
  import com.ibm.ilog.elixir.timeline.supportClasses.EventRenderer;
  
  
  public class ExpandCollapseEventRenderer extends EventRenderer
  {

    /**
     * Constructor.
     */
    public function ExpandCollapseEventRenderer()
    {
      super();
    }
    
    [Bindable]
    
    override public function set owner(value:DisplayObjectContainer):void
    {
      super.owner = value;
    }
    
    private var _expanded:Boolean = false;
    
    public function get expanded():Boolean
    {
      return _expanded;
    }
    
    public function set expanded(value:Boolean):void
    {
      if (value != _expanded) {
        _expanded = value;
        if (value) {
          if (timeline.lastExpanded != null) {
            timeline.lastExpanded.expanded = false;
          }
          timeline.lastExpanded = this;
        } else if (timeline.lastExpanded == this) {
          timeline.lastExpanded = null;
        }
        TimelineBandBase(owner).showDataTips = !_expanded; 
        setCurrentState(getCurrentRendererState());
      }
    }
    
    override protected function getCurrentRendererState():String
    {
      if (expanded) {
        // as soon as we are expanded we don't care anymore about
        // other states, that is our main state
        return "expanded";
      } 
      
      return super.getCurrentRendererState();
    }
  }
}
