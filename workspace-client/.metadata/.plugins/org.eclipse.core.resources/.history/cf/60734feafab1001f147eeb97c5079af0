<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>DailyRulePanel.mxml</title><link rel="stylesheet" type="text/css" href="../SourceStyles.css"/></head><body><pre>&lt;?<span class="MXMLComponent_Tag">xml</span> version=<span class="ActionScriptString">"1.0"</span> encoding=<span class="ActionScriptString">"utf-8"</span>?&gt;
<span class="ActionScriptComment">&lt;!--</span>
<span class="ActionScriptComment">///////////////////////////////////////////////////////////////////////////////</span>
<span class="ActionScriptComment">// Licensed Materials - Property of IBM</span>
<span class="ActionScriptComment">// 5724-Y31,5724-Z78</span>
<span class="ActionScriptComment">// Â© Copyright IBM Corporation 2007, 2010. All Rights Reserved.</span>
<span class="ActionScriptComment">//</span>
<span class="ActionScriptComment">// Note to U.S. Government Users Restricted Rights:</span>
<span class="ActionScriptComment">// Use, duplication or disclosure restricted by GSA ADP Schedule</span>
<span class="ActionScriptComment">// Contract with IBM Corp.</span>
<span class="ActionScriptComment">///////////////////////////////////////////////////////////////////////////////</span>
<span class="ActionScriptComment">--&gt;</span>

&lt;<span class="MXMLComponent_Tag">mx:VBox</span> xmlns:mx=<span class="ActionScriptString">"http://www.adobe.com/2006/mxml"</span> implements=<span class="ActionScriptString">"recurrence.IRecurrenceRuleEditor"</span> 
         verticalGap=<span class="ActionScriptString">"10"</span> creationComplete=<span class="ActionScriptString">"init()"</span>&gt;

  &lt;<span class="MXMLSpecial_Tag">mx:Script</span>&gt;
    &lt;![<span class="MXMLComponent_Tag">CDATA</span><span class="ActionScriptBracket/Brace">[</span>
      <span class="ActionScriptReserved">import</span> mx.controls.Label;
      <span class="ActionScriptReserved">import</span> mx.core.UIComponent;
      <span class="ActionScriptReserved">import</span> mx.validators.NumberValidator;
      <span class="ActionScriptReserved">import</span> ilog.calendar.recurrence.RRule;
      
      <span class="ActionScriptReserved">private</span> <span class="ActionScriptfunction">function</span> init():<span class="ActionScriptReserved">void</span> <span class="ActionScriptBracket/Brace">{</span>
        buildUI();
      <span class="ActionScriptBracket/Brace">}</span>
      
      <span class="ActionScriptReserved">public</span> <span class="ActionScriptfunction">function</span> <span class="ActionScriptReserved">set</span> recurrenceRule(value:RRule):<span class="ActionScriptReserved">void</span> <span class="ActionScriptBracket/Brace">{</span>
        <span class="ActionScriptvar">var</span> r:RRule = value;
        _valid = <span class="ActionScriptReserved">true</span>;
        
        <span class="ActionScriptReserved">if</span> (value.freq == RRule.DAILY) <span class="ActionScriptBracket/Brace">{</span>
          
          <span class="ActionScriptReserved">if</span> (value.byDay.length != 0) <span class="ActionScriptBracket/Brace">{</span>
            
            <span class="ActionScriptReserved">if</span> (value.byDay.join(<span class="ActionScriptString">","</span>) == <span class="ActionScriptString">"MO,TU,WE,TH,FR"</span>) <span class="ActionScriptBracket/Brace">{</span>            
              radioGroup.selectedValue = <span class="ActionScriptString">"radio2"</span>;
            <span class="ActionScriptBracket/Brace">}</span> <span class="ActionScriptReserved">else</span> <span class="ActionScriptBracket/Brace">{</span>
              _valid = <span class="ActionScriptReserved">false</span>
            <span class="ActionScriptBracket/Brace">}</span>
            
          <span class="ActionScriptBracket/Brace">}</span> <span class="ActionScriptReserved">else</span> <span class="ActionScriptBracket/Brace">{</span>
          
            radioGroup.selectedValue = <span class="ActionScriptString">"radio1"</span>;
            interval.text = value.interval.toString();
          <span class="ActionScriptBracket/Brace">}</span>         
          
          <span class="ActionScriptReserved">if</span> (_valid) <span class="ActionScriptBracket/Brace">{</span>
            _valid = Util.checkDefaults(value, <span class="ActionScriptBracket/Brace">[</span><span class="ActionScriptString">"freq"</span>, <span class="ActionScriptString">"byDay"</span>, <span class="ActionScriptString">"interval"</span>, <span class="ActionScriptString">"until"</span>, <span class="ActionScriptString">"count"</span><span class="ActionScriptBracket/Brace">]</span>);
          <span class="ActionScriptBracket/Brace">}</span>  
          
        <span class="ActionScriptBracket/Brace">}</span> <span class="ActionScriptReserved">else</span> <span class="ActionScriptBracket/Brace">{</span>
                    
          <span class="ActionScriptComment">//default</span>
          reset();        
          _valid = <span class="ActionScriptReserved">false</span>;  
        <span class="ActionScriptBracket/Brace">}</span>
      <span class="ActionScriptBracket/Brace">}</span>
      
      <span class="ActionScriptReserved">public</span> <span class="ActionScriptfunction">function</span> <span class="ActionScriptReserved">get</span> recurrenceRule():RRule <span class="ActionScriptBracket/Brace">{</span>
        
        <span class="ActionScriptvar">var</span> r:RRule;
        
        <span class="ActionScriptReserved">if</span> (radioGroup.selectedValue == <span class="ActionScriptString">"radio1"</span>) <span class="ActionScriptBracket/Brace">{</span>
          
          r = <span class="ActionScriptReserved">new</span> RRule();
          r.freq = RRule.DAILY;
          
          <span class="ActionScriptvar">var</span> inter:int = parseInt(interval.text);
        
          <span class="ActionScriptReserved">if</span> (inter &gt; 1) <span class="ActionScriptBracket/Brace">{</span>
            r.interval = inter;
          <span class="ActionScriptBracket/Brace">}</span>
             
        <span class="ActionScriptBracket/Brace">}</span> <span class="ActionScriptReserved">else</span> <span class="ActionScriptBracket/Brace">{</span>
                    
          r = <span class="ActionScriptReserved">new</span> RRule(<span class="ActionScriptString">"FREQ=DAILY;BYDAY=MO,TU,WE,TH,FR"</span>);
          
        <span class="ActionScriptBracket/Brace">}</span>
        
        <span class="ActionScriptReserved">return</span> r; 
      <span class="ActionScriptBracket/Brace">}</span>
      
      <span class="ActionScriptReserved">private</span> <span class="ActionScriptfunction">function</span> buildUI():<span class="ActionScriptReserved">void</span> <span class="ActionScriptBracket/Brace">{</span>
        <span class="ActionScriptComment">//build first choice</span>
        <span class="ActionScriptvar">var</span> format:String = resourceManager.getString(<span class="ActionScriptString">"plannr"</span>, <span class="ActionScriptString">"plannr.recurrence.ruleeditor.daily.interval"</span>, <span class="ActionScriptBracket/Brace">[</span><span class="ActionScriptString">"|$interval|"</span><span class="ActionScriptBracket/Brace">]</span>);
        
        Util.buildUI(<span class="ActionScriptReserved">this</span>, choice1, format, handlerChoice1);
        
      <span class="ActionScriptBracket/Brace">}</span>
      
      <span class="ActionScriptReserved">private</span> <span class="ActionScriptfunction">function</span> handlerChoice1(e:Event):<span class="ActionScriptReserved">void</span> <span class="ActionScriptBracket/Brace">{</span>
        moveRadio(1);
        dispatch();
      <span class="ActionScriptBracket/Brace">}</span> 
           
      <span class="ActionScriptReserved">private</span> <span class="ActionScriptfunction">function</span> validateInterval():<span class="ActionScriptReserved">void</span> <span class="ActionScriptBracket/Brace">{</span>               
        <span class="ActionScriptvar">var</span> i:int = Util.validateInt(interval.text, <span class="ActionScriptReserved">true</span>);
        interval.text = i.toString();
        radioGroup.selectedValue = <span class="ActionScriptString">"radio1"</span>;
        dispatch();
      <span class="ActionScriptBracket/Brace">}</span>
      
      <span class="ActionScriptReserved">private</span> <span class="ActionScriptfunction">function</span> dispatch():<span class="ActionScriptReserved">void</span> <span class="ActionScriptBracket/Brace">{</span>
        dispatchEvent(<span class="ActionScriptReserved">new</span> <span class="ActionScriptMetadata">Event</span>(<span class="ActionScriptString">"ruleChanged"</span>, <span class="ActionScriptReserved">true</span>));        
      <span class="ActionScriptBracket/Brace">}</span>
      
      <span class="ActionScriptReserved">public</span> <span class="ActionScriptfunction">function</span> reset():<span class="ActionScriptReserved">void</span> <span class="ActionScriptBracket/Brace">{</span>
        interval.text = <span class="ActionScriptString">"1"</span>;
        radioGroup.selectedValue = <span class="ActionScriptString">"radio1"</span>; 
        _valid = <span class="ActionScriptReserved">true</span>;
      <span class="ActionScriptBracket/Brace">}</span>
      
      <span class="ActionScriptReserved">private</span> <span class="ActionScriptfunction">function</span> moveRadio(id:int):<span class="ActionScriptReserved">void</span> <span class="ActionScriptBracket/Brace">{</span>
        radioGroup.selectedValue = <span class="ActionScriptString">"radio"</span>+id;
      <span class="ActionScriptBracket/Brace">}</span>
      
      <span class="ActionScriptReserved">private</span> <span class="ActionScriptvar">var</span> _valid:Boolean = <span class="ActionScriptReserved">true</span>;
      
      <span class="ActionScriptReserved">public</span> <span class="ActionScriptfunction">function</span> isValid():Boolean <span class="ActionScriptBracket/Brace">{</span>
        <span class="ActionScriptReserved">return</span> _valid;
      <span class="ActionScriptBracket/Brace">}</span>
           
      
    <span class="ActionScriptBracket/Brace">]</span><span class="ActionScriptBracket/Brace">]</span>&gt;
  &lt;/<span class="MXMLSpecial_Tag">mx:Script</span>&gt;

  &lt;<span class="MXMLComponent_Tag">mx:RadioButtonGroup</span> id=<span class="ActionScriptString">"radioGroup"</span>  change=<span class="ActionScriptString">"dispatch()"</span>  /&gt;
  
  &lt;<span class="MXMLComponent_Tag">mx:HBox</span>&gt;
    &lt;<span class="MXMLComponent_Tag">mx:RadioButton</span> id=<span class="ActionScriptString">"radio1"</span> groupName=<span class="ActionScriptString">"radioGroup"</span> value=<span class="ActionScriptString">"radio1"</span> selected=<span class="ActionScriptString">"true"</span> /&gt;
    
    &lt;<span class="MXMLComponent_Tag">mx:HBox</span> id=<span class="ActionScriptString">"choice1"</span> horizontalGap=<span class="ActionScriptString">"0"</span>&gt;
      &lt;<span class="MXMLComponent_Tag">mx:TextInput</span> id=<span class="ActionScriptString">"interval"</span>  width=<span class="ActionScriptString">"37"</span> text=<span class="ActionScriptString">"1"</span> change=<span class="ActionScriptString">"validateInterval()"</span>/&gt;    
    &lt;/<span class="MXMLComponent_Tag">mx:HBox</span>&gt;
  &lt;/<span class="MXMLComponent_Tag">mx:HBox</span>&gt;
  
  &lt;<span class="MXMLComponent_Tag">mx:HBox</span> id=<span class="ActionScriptString">"choice2"</span>&gt;
    &lt;<span class="MXMLComponent_Tag">mx:RadioButton</span> groupName=<span class="ActionScriptString">"radioGroup"</span> value=<span class="ActionScriptString">"radio2"</span> /&gt;
    &lt;<span class="MXMLComponent_Tag">mx:Label</span> text=<span class="ActionScriptString">"@Resource(bundle='plannr', key='plannr.recurrence.ruleeditor.label.everyWeekday')"</span> 
              click=<span class="ActionScriptString">"moveRadio(2); dispatch()"</span>/&gt;    
  &lt;/<span class="MXMLComponent_Tag">mx:HBox</span>&gt;
    
&lt;/<span class="MXMLComponent_Tag">mx:VBox</span>&gt;
</pre></body></html>