<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"/><title>WeeklyRulePanel.mxml</title><link rel="stylesheet" type="text/css" href="../SourceStyles.css"/></head><body><pre>&lt;?<span class="MXMLComponent_Tag">xml</span> version=<span class="ActionScriptString">"1.0"</span> encoding=<span class="ActionScriptString">"utf-8"</span>?&gt;
<span class="ActionScriptComment">&lt;!--</span>
<span class="ActionScriptComment">///////////////////////////////////////////////////////////////////////////////</span>
<span class="ActionScriptComment">// Licensed Materials - Property of IBM</span>
<span class="ActionScriptComment">// 5724-Y31,5724-Z78</span>
<span class="ActionScriptComment">// Â© Copyright IBM Corporation 2007, 2010. All Rights Reserved.</span>
<span class="ActionScriptComment">//</span>
<span class="ActionScriptComment">// Note to U.S. Government Users Restricted Rights:</span>
<span class="ActionScriptComment">// Use, duplication or disclosure restricted by GSA ADP Schedule</span>
<span class="ActionScriptComment">// Contract with IBM Corp.</span>
<span class="ActionScriptComment">///////////////////////////////////////////////////////////////////////////////</span>
<span class="ActionScriptComment">--&gt;</span>

&lt;<span class="MXMLComponent_Tag">mx:VBox</span> xmlns:mx=<span class="ActionScriptString">"http://www.adobe.com/2006/mxml"</span> implements=<span class="ActionScriptString">"recurrence.IRecurrenceRuleEditor"</span> 
         verticalGap=<span class="ActionScriptString">"10"</span> creationComplete=<span class="ActionScriptString">"init()"</span>&gt;

  &lt;<span class="MXMLSpecial_Tag">mx:Script</span>&gt;
    &lt;![<span class="MXMLComponent_Tag">CDATA</span><span class="ActionScriptBracket/Brace">[</span>
      <span class="ActionScriptReserved">import</span> mx.formatters.DateFormatter;
    
      <span class="ActionScriptReserved">import</span> ilog.calendar.recurrence.WeekDay;
      <span class="ActionScriptReserved">import</span> ilog.calendar.recurrence.RRule;
      
      <span class="ActionScriptReserved">private</span> <span class="ActionScriptvar">var</span> _checkboxes:Array;
      
      <span class="ActionScriptReserved">private</span> <span class="ActionScriptfunction">function</span> init():<span class="ActionScriptReserved">void</span> <span class="ActionScriptBracket/Brace">{</span>
        
        <span class="ActionScriptvar">var</span> date:Date = <span class="ActionScriptReserved">new</span> Date();
        
        _checkboxes = <span class="ActionScriptBracket/Brace">[</span>sunday, monday, tuesday, wednesday, thursday, friday, saturday<span class="ActionScriptBracket/Brace">]</span>;
        <span class="ActionScriptvar">var</span> df:DateFormatter = <span class="ActionScriptReserved">new</span> DateFormatter();
        df.formatString = resourceManager.getString(<span class="ActionScriptString">"calendarsample"</span>, <span class="ActionScriptString">"calendarsample.recurrence.ruleeditor.weekday.format"</span>);
        
        date.date -= date.day; <span class="ActionScriptComment">//start on sunday</span>
        
        <span class="ActionScriptReserved">for</span> (<span class="ActionScriptvar">var</span> i:uint=0; i&lt;7; <span class="MXMLComponent_Tag">i</span>++) <span class="ActionScriptBracket/Brace">{</span>          
          CheckBox(_checkboxes<span class="ActionScriptBracket/Brace">[</span>i<span class="ActionScriptBracket/Brace">]</span>).label = df.format(date);
          date.date++;
        <span class="ActionScriptBracket/Brace">}</span>
        
        buildUI();               
      <span class="ActionScriptBracket/Brace">}</span>
      
      <span class="ActionScriptReserved">private</span> <span class="ActionScriptfunction">function</span> buildUI():<span class="ActionScriptReserved">void</span> <span class="ActionScriptBracket/Brace">{</span>

        <span class="ActionScriptvar">var</span> format:String = resourceManager.getString(<span class="ActionScriptString">"calendarsample"</span>, <span class="ActionScriptString">"calendarsample.recurrence.ruleeditor.weekly.interval"</span>, <span class="ActionScriptBracket/Brace">[</span><span class="ActionScriptString">"|$interval|"</span><span class="ActionScriptBracket/Brace">]</span>);
        
        Util.buildUI(<span class="ActionScriptReserved">this</span>, intervalPanel, format, <span class="ActionScriptReserved">null</span>);
        
      <span class="ActionScriptBracket/Brace">}</span>
      
      <span class="ActionScriptReserved">public</span> <span class="ActionScriptfunction">function</span> <span class="ActionScriptReserved">set</span> recurrenceRule(value:RRule):<span class="ActionScriptReserved">void</span> <span class="ActionScriptBracket/Brace">{</span>
        
        <span class="ActionScriptvar">var</span> r:RRule = value;
        _valid = <span class="ActionScriptReserved">true</span>;
        
        <span class="ActionScriptReserved">if</span> (value.freq == RRule.WEEKLY) <span class="ActionScriptBracket/Brace">{</span>
          
          <span class="ActionScriptReserved">for</span> <span class="ActionScriptReserved">each</span> (<span class="ActionScriptvar">var</span> wd:WeekDay <span class="ActionScriptReserved">in</span> r.byDay) <span class="ActionScriptBracket/Brace">{</span>
            <span class="ActionScriptReserved">if</span> (wd.modifier != 0) <span class="ActionScriptBracket/Brace">{</span>
              _valid = <span class="ActionScriptReserved">false</span>;
              break;
            <span class="ActionScriptBracket/Brace">}</span>
          <span class="ActionScriptBracket/Brace">}</span>
          
          <span class="ActionScriptReserved">if</span> (_valid) <span class="ActionScriptBracket/Brace">{</span>
            
            <span class="ActionScriptReserved">if</span> (value.byDay.length == 0) <span class="ActionScriptBracket/Brace">{</span>
              
              CheckBox(_checkboxes<span class="ActionScriptBracket/Brace">[</span>startTime.day<span class="ActionScriptBracket/Brace">]</span>).selected = <span class="ActionScriptReserved">true</span>;
              
            <span class="ActionScriptBracket/Brace">}</span> <span class="ActionScriptReserved">else</span> <span class="ActionScriptBracket/Brace">{</span>
          
              <span class="ActionScriptvar">var</span> days:String = value.byDay.join(<span class="ActionScriptString">","</span>); 
              sunday.selected = days.indexOf(<span class="ActionScriptString">"SU"</span>) != -1;
              monday.selected = days.indexOf(<span class="ActionScriptString">"MO"</span>) != -1;
              tuesday.selected = days.indexOf(<span class="ActionScriptString">"TU"</span>) != -1;
              wednesday.selected = days.indexOf(<span class="ActionScriptString">"WE"</span>) != -1;
              thursday.selected = days.indexOf(<span class="ActionScriptString">"TH"</span>) != -1;
              friday.selected = days.indexOf(<span class="ActionScriptString">"FR"</span>) != -1;
              saturday.selected = days.indexOf(<span class="ActionScriptString">"SA"</span>) != -1;
            <span class="ActionScriptBracket/Brace">}</span>
                                       
            interval.text = r.interval.toString();
            
            <span class="ActionScriptReserved">if</span> (_valid) <span class="ActionScriptBracket/Brace">{</span>
              _valid = Util.checkDefaults(value, <span class="ActionScriptBracket/Brace">[</span><span class="ActionScriptString">"freq"</span>, <span class="ActionScriptString">"byDay"</span>, <span class="ActionScriptString">"interval"</span>, <span class="ActionScriptString">"until"</span>, <span class="ActionScriptString">"count"</span><span class="ActionScriptBracket/Brace">]</span>);
            <span class="ActionScriptBracket/Brace">}</span>              
            
          <span class="ActionScriptBracket/Brace">}</span> <span class="ActionScriptReserved">else</span> <span class="ActionScriptBracket/Brace">{</span>
            reset();  
            _valid = <span class="ActionScriptReserved">false</span>;
          <span class="ActionScriptBracket/Brace">}</span>             
        <span class="ActionScriptBracket/Brace">}</span>                 
      <span class="ActionScriptBracket/Brace">}</span>
      
      <span class="ActionScriptReserved">public</span> <span class="ActionScriptfunction">function</span> <span class="ActionScriptReserved">get</span> recurrenceRule():RRule <span class="ActionScriptBracket/Brace">{</span>
        
        <span class="ActionScriptvar">var</span> r:RRule = <span class="ActionScriptReserved">new</span> RRule(<span class="ActionScriptString">"FREQ=WEEKLY"</span>);
        
        <span class="ActionScriptvar">var</span> days:Array = <span class="ActionScriptBracket/Brace">[</span><span class="ActionScriptBracket/Brace">]</span>;
        
        <span class="ActionScriptvar">var</span> oneSelected:Boolean = <span class="ActionScriptReserved">false</span>;
        
        <span class="ActionScriptReserved">if</span> (sunday.selected) <span class="ActionScriptBracket/Brace">{</span>
          oneSelected = <span class="ActionScriptReserved">true</span>;
          days.push(<span class="ActionScriptReserved">new</span> WeekDay(0, 0));
        <span class="ActionScriptBracket/Brace">}</span>
        
        <span class="ActionScriptReserved">if</span> (monday.selected) <span class="ActionScriptBracket/Brace">{</span>
          oneSelected = <span class="ActionScriptReserved">true</span>;
          days.push(<span class="ActionScriptReserved">new</span> WeekDay(0, 1));
        <span class="ActionScriptBracket/Brace">}</span>
        
        <span class="ActionScriptReserved">if</span> (tuesday.selected) <span class="ActionScriptBracket/Brace">{</span>
          oneSelected = <span class="ActionScriptReserved">true</span>;
          days.push(<span class="ActionScriptReserved">new</span> WeekDay(0, 2));
        <span class="ActionScriptBracket/Brace">}</span>
        
        <span class="ActionScriptReserved">if</span> (wednesday.selected) <span class="ActionScriptBracket/Brace">{</span>
          oneSelected = <span class="ActionScriptReserved">true</span>;
          days.push(<span class="ActionScriptReserved">new</span> WeekDay(0, 3));
        <span class="ActionScriptBracket/Brace">}</span>
        
        <span class="ActionScriptReserved">if</span> (thursday.selected) <span class="ActionScriptBracket/Brace">{</span>
          oneSelected = <span class="ActionScriptReserved">true</span>;
          days.push(<span class="ActionScriptReserved">new</span> WeekDay(0, 4));
        <span class="ActionScriptBracket/Brace">}</span>
        
        <span class="ActionScriptReserved">if</span> (friday.selected) <span class="ActionScriptBracket/Brace">{</span>
          oneSelected = <span class="ActionScriptReserved">true</span>;
          days.push(<span class="ActionScriptReserved">new</span> WeekDay(0, 5));
        <span class="ActionScriptBracket/Brace">}</span>
        
        <span class="ActionScriptReserved">if</span> (saturday.selected) <span class="ActionScriptBracket/Brace">{</span>
          oneSelected = <span class="ActionScriptReserved">true</span>;
          days.push(<span class="ActionScriptReserved">new</span> WeekDay(0, 6));
        <span class="ActionScriptBracket/Brace">}</span>
        
        <span class="ActionScriptReserved">if</span> (oneSelected) <span class="ActionScriptBracket/Brace">{</span>        
          r.byDay = days;
        <span class="ActionScriptBracket/Brace">}</span> <span class="ActionScriptReserved">else</span> <span class="ActionScriptBracket/Brace">{</span>
          r.byDay = <span class="ActionScriptBracket/Brace">[</span> <span class="ActionScriptReserved">new</span> WeekDay(0, startTime.day) <span class="ActionScriptBracket/Brace">]</span>;
        <span class="ActionScriptBracket/Brace">}</span>
        
        <span class="ActionScriptvar">var</span> inter:int = parseInt(interval.text);
        
        <span class="ActionScriptReserved">if</span> (inter &gt; 1) <span class="ActionScriptBracket/Brace">{</span>
          r.interval = inter;
        <span class="ActionScriptBracket/Brace">}</span>
                       
        <span class="ActionScriptReserved">return</span> r; 
      <span class="ActionScriptBracket/Brace">}</span>
                            
      <span class="ActionScriptReserved">private</span> <span class="ActionScriptfunction">function</span> validateInterval():<span class="ActionScriptReserved">void</span> <span class="ActionScriptBracket/Brace">{</span>
        <span class="ActionScriptvar">var</span> i:int = Util.validateInt(interval.text, <span class="ActionScriptReserved">true</span>);
        interval.text = i.toString();
        dispatch();
      <span class="ActionScriptBracket/Brace">}</span>
      
      
      <span class="ActionScriptReserved">private</span> <span class="ActionScriptvar">var</span> _startTime:Date;
      
      <span class="ActionScriptReserved">public</span> <span class="ActionScriptfunction">function</span> <span class="ActionScriptReserved">set</span> startTime(value:Date):<span class="ActionScriptReserved">void</span> <span class="ActionScriptBracket/Brace">{</span>
        
        _startTime = value;
        
        <span class="ActionScriptvar">var</span> sel:Boolean = <span class="ActionScriptReserved">false</span>;
        <span class="ActionScriptReserved">for</span> <span class="ActionScriptReserved">each</span> (<span class="ActionScriptvar">var</span> ch:CheckBox <span class="ActionScriptReserved">in</span> _checkboxes) <span class="ActionScriptBracket/Brace">{</span>
          <span class="ActionScriptReserved">if</span> (ch.selected) <span class="ActionScriptBracket/Brace">{</span>
            sel = <span class="ActionScriptReserved">true</span>;
            break;
          <span class="ActionScriptBracket/Brace">}</span>
        <span class="ActionScriptBracket/Brace">}</span>
        
        <span class="ActionScriptReserved">if</span> (!sel) <span class="ActionScriptBracket/Brace">{</span>
          CheckBox(_checkboxes<span class="ActionScriptBracket/Brace">[</span>startTime.day<span class="ActionScriptBracket/Brace">]</span>).selected = <span class="ActionScriptReserved">true</span>;
        <span class="ActionScriptBracket/Brace">}</span>        
      <span class="ActionScriptBracket/Brace">}</span>
      
      <span class="ActionScriptReserved">public</span> <span class="ActionScriptfunction">function</span> <span class="ActionScriptReserved">get</span> startTime():Date <span class="ActionScriptBracket/Brace">{</span>
        <span class="ActionScriptReserved">return</span> _startTime;
      <span class="ActionScriptBracket/Brace">}</span>
      
      <span class="ActionScriptReserved">private</span> <span class="ActionScriptfunction">function</span> dispatch():<span class="ActionScriptReserved">void</span> <span class="ActionScriptBracket/Brace">{</span>
        dispatchEvent(<span class="ActionScriptReserved">new</span> <span class="ActionScriptMetadata">Event</span>(<span class="ActionScriptString">"ruleChanged"</span>, <span class="ActionScriptReserved">true</span>));        
      <span class="ActionScriptBracket/Brace">}</span>      
      
      <span class="ActionScriptReserved">public</span> <span class="ActionScriptfunction">function</span> reset():<span class="ActionScriptReserved">void</span> <span class="ActionScriptBracket/Brace">{</span>
        
        interval.text = <span class="ActionScriptString">"1"</span>;
        
        sunday.selected = <span class="ActionScriptReserved">false</span>;        
        monday.selected = <span class="ActionScriptReserved">false</span>;        
        tuesday.selected = <span class="ActionScriptReserved">false</span>;        
        wednesday.selected = <span class="ActionScriptReserved">false</span>;        
        thursday.selected = <span class="ActionScriptReserved">false</span>;        
        friday.selected = <span class="ActionScriptReserved">false</span>;        
        saturday.selected = <span class="ActionScriptReserved">false</span>;
        
        _valid = <span class="ActionScriptReserved">true</span>;
        
      <span class="ActionScriptBracket/Brace">}</span>
            
      <span class="ActionScriptReserved">private</span> <span class="ActionScriptvar">var</span> _valid:Boolean = <span class="ActionScriptReserved">true</span>;
      
      <span class="ActionScriptReserved">public</span> <span class="ActionScriptfunction">function</span> isValid():Boolean <span class="ActionScriptBracket/Brace">{</span>
        <span class="ActionScriptReserved">return</span> _valid;
      <span class="ActionScriptBracket/Brace">}</span>
      
    <span class="ActionScriptBracket/Brace">]</span><span class="ActionScriptBracket/Brace">]</span>&gt;
             
  &lt;/<span class="MXMLSpecial_Tag">mx:Script</span>&gt;
  
  
  
  &lt;<span class="MXMLComponent_Tag">mx:HBox</span> id=<span class="ActionScriptString">"intervalPanel"</span>  horizontalGap=<span class="ActionScriptString">"0"</span>&gt;      
  
    &lt;<span class="MXMLComponent_Tag">mx:TextInput</span> id=<span class="ActionScriptString">"interval"</span> width=<span class="ActionScriptString">"37"</span> change=<span class="ActionScriptString">"validateInterval()"</span> text=<span class="ActionScriptString">"1"</span>/&gt;
          
  &lt;/<span class="MXMLComponent_Tag">mx:HBox</span>&gt;
    
  &lt;<span class="MXMLComponent_Tag">mx:Label</span> text=<span class="ActionScriptString">"@Resource(bundle='calendarsample', key='calendarsample.recurrence.ruleeditor.on.label')"</span> /&gt;
    
  &lt;<span class="MXMLComponent_Tag">mx:HBox</span>&gt;
    &lt;<span class="MXMLComponent_Tag">mx:CheckBox</span> id=<span class="ActionScriptString">"sunday"</span> change=<span class="ActionScriptString">"dispatch()"</span>/&gt;
    &lt;<span class="MXMLComponent_Tag">mx:CheckBox</span> id=<span class="ActionScriptString">"monday"</span> change=<span class="ActionScriptString">"dispatch()"</span> /&gt;
    &lt;<span class="MXMLComponent_Tag">mx:CheckBox</span> id=<span class="ActionScriptString">"tuesday"</span> change=<span class="ActionScriptString">"dispatch()"</span> /&gt;
    &lt;<span class="MXMLComponent_Tag">mx:CheckBox</span> id=<span class="ActionScriptString">"wednesday"</span> change=<span class="ActionScriptString">"dispatch()"</span> /&gt;
    &lt;<span class="MXMLComponent_Tag">mx:CheckBox</span> id=<span class="ActionScriptString">"thursday"</span> change=<span class="ActionScriptString">"dispatch()"</span> /&gt;
    &lt;<span class="MXMLComponent_Tag">mx:CheckBox</span> id=<span class="ActionScriptString">"friday"</span> change=<span class="ActionScriptString">"dispatch()"</span> /&gt;
    &lt;<span class="MXMLComponent_Tag">mx:CheckBox</span> id=<span class="ActionScriptString">"saturday"</span> change=<span class="ActionScriptString">"dispatch()"</span> /&gt;
  &lt;/<span class="MXMLComponent_Tag">mx:HBox</span>&gt;
     
&lt;/<span class="MXMLComponent_Tag">mx:VBox</span>&gt;
</pre></body></html>