<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent label="Account" width="100%" height="100%"  
					xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx" creationComplete="creationCompleteHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import ch.plannr.model.User;
			
			import mx.events.FlexEvent;
			[Bindable]
			private var userToUpdate:User = new User();
			private function onLoad():void{
				
			}

			protected function navigatorcontent1_creationCompleteHandler(event:FlexEvent):void
			{
				/public class UtilFunctions
				{
					
					
					public static function newSibling(sourceObj:Object):* {
						if(sourceObj) {
							
							var objSibling:*;
							try {
								var classOfSourceObj:Class = getDefinitionByName(getQualifiedClassName(sourceObj)) as Class;
								objSibling = new classOfSourceObj();
							}
							
							catch(e:Object) {}
							
							return objSibling;
						}
						return null;
					}
					
					public static function clone(source:Object):Object {
						
						var clone:Object;
						if(source) {
							clone = newSibling(source);
							
							if(clone) {
								copyData(source, clone);
							}
						}
						
						return clone;
					}
					
					public static function copyData(source:Object, destination:Object):void {
						
						//copies data from commonly named properties and getter/setter pairs
						if((source) && (destination)) {
							
							try {
								var sourceInfo:XML = describeType(source);
								var prop:XML;
								
								for each(prop in sourceInfo.variable) {
									
									if(destination.hasOwnProperty(prop.@name)) {
										destination[prop.@name] = source[prop.@name];
									}
									
								}
								
								for each(prop in sourceInfo.accessor) {
									if(prop.@access == "readwrite") {
										if(destination.hasOwnProperty(prop.@name)) {
											destination[prop.@name] = source[prop.@name];
										}
										
									}
								}
							}
							catch (err:Object) {
								;
							}
						}
					}
				}

			}

		]]>
	</fx:Script>
	<mx:Form width="100%" height="100%" defaultButton="{bRegister}">
		<mx:FormItem label="email address">
			<s:TextInput id="tiEmail" text="{userToUpdate.email}"/>
		</mx:FormItem>
		<mx:FormItem label="first name">
			<s:TextInput id="tiFirstName" text="{userToUpdate.firstname}"/>
		</mx:FormItem>
		<mx:FormItem label="last name">
			<s:TextInput id="tiLastname" text="{userToUpdate.lastname}"/>
		</mx:FormItem>
		<mx:FormItem label="password">
			<s:TextInput id="tiPassword" text="{userToUpdate.password}" displayAsPassword="true"/>
		</mx:FormItem>
		<mx:FormItem label="confirm password">
			<s:TextInput id="tiConfirmpassword" text="{userToUpdate.confirmPassword}" displayAsPassword="true"/>
		</mx:FormItem>
		<mx:FormItem>
			<s:HGroup>
				<s:Button id="bRegister" label="Register" /><s:Button id="bCancel" label="Cancel"/>
			</s:HGroup>
		</mx:FormItem>
		<mx:Spacer height="10"/>
		<s:Label id="lMessage" text=""/>
	</mx:Form>	
	
</s:NavigatorContent>